{"version":3,"sources":["components/UI/ErrorModal.module.css","components/Users/Users.module.css","components/UI/Card.module.css","components/Users/AddUser.module.css","components/UI/Button.module.css","components/Users/Userlist.module.css","components/UI/Card.js","components/UI/Button.js","components/UI/ErrorModal.js","service/api.js","components/Users/AddUser.js","components/Users/Users.js","components/Users/UsersList.js","App.js","index.js"],"names":["module","exports","Card","props","className","styles","card","children","Button","button","type","onClick","ErrorModal","backdrop","onConfirm","modal","header","title","content","message","actions","dotenv","config","URL","console","log","addUser","data","axios","post","getUsers","get","editTask","id","deleteTask","delete","AddUser","useState","enteredTask","setenteredUsername","enteredDate","setenteredAge","error","setError","onsubmithandler","event","preventDefault","trim","length","obj","task","deadline","toString","input","onSubmit","htmlFor","value","placeholder","onChange","target","Users","setModal","user_task","user_deadline","toggle","deletehandler","_id","operations","con","style","color","icon","faTrash","faEdit","isOpen","UsersList","updatedata","editdata","jsd","tasks","map","user","onDLT","onDelete","users","App","alltask","setAlltask","getAlltask","useCallback","alltaskserver","useEffect","intervalId","setInterval","clearInterval","ReactDOM","createRoot","document","getElementById","render"],"mappings":"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","file":"static/js/main.10322cad.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"backdrop\":\"ErrorModal_backdrop__3Gb6y\",\"modal\":\"ErrorModal_modal__XXtR3\",\"header\":\"ErrorModal_header__1Swlo\",\"content\":\"ErrorModal_content__2Wl2w\",\"actions\":\"ErrorModal_actions__1tuc3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"con\":\"Users_con__1rNqE\",\"operations\":\"Users_operations__1RnVx\",\"input\":\"Users_input__3f_cv\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"card\":\"Card_card__2Mzso\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"AddUser_input__2riKd\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"Button_button__ctAOa\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"users\":\"Userlist_users__1vVbC\",\"con\":\"Userlist_con__1k3Ra\"};","import React from 'react';\r\nimport styles from './Card.module.css'\r\n\r\nconst Card = props => {\r\n    return <div className={` ${styles.card} ${props.className} `}>{props.children}</div>\r\n}\r\n\r\nexport default Card;","import React from \"react\";\r\n\r\nimport styles from \"./Button.module.css\";\r\n\r\nconst Button = (props) => {\r\n  return (\r\n    <button className={styles.button} \r\n    type={props.type || \"button\"}\r\n    onClick={props.onClick}\r\n    >\r\n      {props.children}\r\n    </button>\r\n  );\r\n};\r\n\r\nexport default Button;\r\n","import React from 'react';\r\nimport Button from './Button';\r\nimport Card from './Card';\r\nimport styles from './ErrorModal.module.css'\r\n\r\nconst ErrorModal = props => {\r\n\r\n\r\n\r\n    return(\r\n        <div>\r\n            <div className={styles.backdrop} onClick={props.onConfirm}/>\r\n                <Card className = {styles.modal}>\r\n                    <header className={styles.header}>\r\n                        <h2>{props.title}</h2>\r\n                    </header>\r\n                    <div className={styles.content}>\r\n                        <p>{props.message}</p>\r\n                    </div>\r\n                    <footer className={styles.actions}>\r\n                        <Button onClick={props.onConfirm}>\r\n                            Okay\r\n                        </Button>\r\n                    </footer>\r\n                </Card>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ErrorModal;","import axios from 'axios';\r\nimport dotenv from 'dotenv';\r\n\r\ndotenv.config();\r\n\r\nconst URL = 'https://taskappbackend-fpnf.onrender.com';\r\nconsole.log(URL);\r\nexport const addUser = async (data) =>{\r\n    try {\r\n        return await axios.post(`${URL}/add`,data);\r\n    } catch (error) {\r\n        console.log('Error While calling add user API',error);\r\n    }\r\n}\r\n\r\nexport const getUsers = async () =>{\r\n    try {\r\n        return await axios.get(`${URL}/all`)\r\n    } catch (error) {\r\n        console.log('Error while loading data from server');\r\n    }\r\n}\r\n\r\n\r\nexport const editTask = async (data,id) =>{\r\n    try {\r\n        return await axios.post(`${URL}/edittask`,data,id)\r\n    } catch (error) {\r\n        console.log('Error while editing data from server');\r\n    }\r\n}\r\n\r\n\r\nexport const deleteTask = async (id) =>{\r\n    try {\r\n        console.log(id);\r\n        return await axios.delete(`${URL}/${id}`)\r\n    } catch (error) {\r\n        console.log('Error while Deleting data from server');\r\n    }\r\n}\r\n\r\n","import React, { useState, } from \"react\";\r\nimport Card from \"../UI/Card\";\r\nimport styles from \"./AddUser.module.css\";\r\nimport Button from \"../UI/Button\";\r\nimport ErrorModal from \"../UI/ErrorModal\";\r\n\r\nimport { addUser} from \"../../service/api\";\r\n\r\nconst AddUser = (props) => {\r\n\r\n  const [enteredTask, setenteredUsername] = useState(\"\");\r\n  const [enteredDate, setenteredAge] = useState(null);\r\n  const [error, setError] = useState();\r\n\r\n\r\n  const onsubmithandler = async (event) => {\r\n    event.preventDefault();\r\n\r\n    console.log(enteredDate);\r\n\r\n    if (enteredTask.trim().length === 0 || enteredDate === null) {\r\n      setError({\r\n        title: \"Invalid input\",\r\n        message: \"Please Enter a Valid Task and Date (non-empty values).\",\r\n      });\r\n      return;\r\n    }\r\n\r\n    // let today = new Date();\r\n    \r\n    // let cyear = +today.getFullYear();\r\n    // let cmonth = +today.getMonth() +1;\r\n    // let cdate = +today.getDate();\r\n\r\n    // let eyear = +enteredDate.slice(0,4);\r\n    // let emonth = +enteredDate.slice(5,7);\r\n    // let edate = +enteredDate.slice(8,10);\r\n  \r\n    // if (eyear < cyear) {\r\n    //   setError({\r\n    //     title: \"Invalid Year\",\r\n    //     message: \"Please enter a valid input.\",\r\n    //   });\r\n    //   return;\r\n    // }\r\n    \r\n    // if (eyear === cyear && emonth < cmonth) {\r\n    //   setError({\r\n    //     title: \"Invalid Month\",\r\n    //     message: \"Please enter a valid input.\",\r\n    //   });\r\n    //   return;\r\n    // }\r\n    \r\n    // if(eyear === cyear && emonth === cmonth && edate < cdate ) {\r\n    //   setError({\r\n    //     title: \"Invalid Date\",\r\n    //     message: \"Please enter a valid input.\",\r\n    //   });\r\n    //   return;\r\n    // }\r\n\r\n    const obj = {\r\n      task:enteredTask,\r\n      deadline:enteredDate.toString(),\r\n    }\r\n\r\n    await addUser(obj);\r\n\r\n    setenteredAge(null);\r\n    setenteredUsername(\"\");\r\n  };\r\n\r\n  const usernamechangehandler = (event) => {\r\n    setenteredUsername(event.target.value);\r\n  };\r\n\r\n  const agechangehandler = (event) => {\r\n    setenteredAge(event.target.value);\r\n  };\r\n\r\n  const errorHandler = () => {\r\n    setError(null);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      {error && (\r\n        <ErrorModal\r\n          title={error.title}\r\n          message={error.message}\r\n          onConfirm={errorHandler}\r\n        />\r\n      )}\r\n      <Card className={styles.input}>\r\n        <form onSubmit={onsubmithandler}>\r\n          <label htmlFor=\"username\"> Task</label>\r\n          <input\r\n            id=\"Task\"\r\n            type=\"text\"\r\n            value={enteredTask}\r\n            placeholder=\"Add Task\"\r\n            onChange={usernamechangehandler}\r\n          ></input>\r\n          <label htmlFor=\"age\"> Deadline (Date) </label>\r\n          <input\r\n            id=\"date\"\r\n            type=\"date\"\r\n            onChange={agechangehandler}\r\n          ></input>\r\n          <Button type=\"submit\">Add Task</Button>\r\n        </form>\r\n      </Card>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AddUser;\r\n","import { React, useState } from \"react\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faTrash, faEdit } from \"@fortawesome/free-solid-svg-icons\";\r\nimport styles from \"./Users.module.css\";\r\nimport { Button, Modal, ModalHeader, ModalBody } from \"reactstrap\";\r\nimport ErrorModal from \"../UI/ErrorModal\";\r\n\r\nimport { editTask, deleteTask } from \"../../service/api\";\r\n\r\nconst Users = (props) => {\r\n  const [modal, setModal] = useState(false);\r\n  const [error, setError] = useState();\r\n\r\n  const [enteredTask, setenteredUsername] = useState(props.user_task);\r\n  const [enteredDate, setenteredAge] = useState(props.user_deadline);\r\n\r\n  const usernamechangehandler = (event) => {\r\n    setenteredUsername(event.target.value);\r\n  };\r\n\r\n  const agechangehandler = (event) => {\r\n    setenteredAge(event.target.value);\r\n  };\r\n\r\n  const toggle = () => {\r\n    setModal(!modal);\r\n    console.log(props.id);\r\n  };\r\n\r\n  const deletehandler = async () => {\r\n    await deleteTask(props.id);\r\n  };\r\n\r\n  const errorHandler = () => {\r\n    setError(null);\r\n  };\r\n\r\n  const onsubmithandler = async (event) => {\r\n    event.preventDefault();\r\n\r\n    console.log(enteredDate);\r\n\r\n    if (enteredTask.trim().length === 0 || enteredDate === null) {\r\n      setError({\r\n        title: \"Invalid input\",\r\n        message: \"Please Enter a Valid Task and Date (non-empty values).\",\r\n      });\r\n      return;\r\n    }\r\n\r\n    let obj = {\r\n      _id: props.id,\r\n      task: enteredTask,\r\n      deadline: enteredDate.toString(),\r\n    };\r\n\r\n    let res = await editTask(obj, props.id);\r\n\r\n    \r\n\r\n    setenteredAge(null);\r\n    setenteredUsername(\"\");\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      {error && (\r\n        <ErrorModal\r\n          title={error.title}\r\n          message={error.message}\r\n          onConfirm={errorHandler}\r\n        />\r\n      )}\r\n      <div>\r\n        <li>{props.children}</li>\r\n        <div className={styles.operations}>\r\n          <div onClick={deletehandler} className={styles.con}>\r\n            <FontAwesomeIcon style={{ color: \"#474646\" }} icon={faTrash} />\r\n          </div>\r\n          <div onClick={toggle}>\r\n            <FontAwesomeIcon style={{ color: \"#474646\" }} icon={faEdit} />\r\n          </div>\r\n        </div>\r\n        <Modal isOpen={modal} toggle={toggle}>\r\n          <ModalHeader toggle={toggle}>Edit Your Task</ModalHeader>\r\n          <ModalBody>\r\n            <form className={styles.input} onSubmit={onsubmithandler}>\r\n              <label htmlFor=\"username\"> Task</label>\r\n              <input\r\n                id=\"Task\"\r\n                type=\"text\"\r\n                placeholder=\"Add Task\"\r\n                value={enteredTask}\r\n                onChange={usernamechangehandler}\r\n              ></input>\r\n              <label htmlFor=\"age\"> Deadline (Date) </label>\r\n              <input\r\n                id=\"date\"\r\n                type=\"date\"\r\n                value={enteredDate}\r\n                onChange={agechangehandler}\r\n              ></input>\r\n              <Button onClick={toggle} type=\"submit\">Edit Task</Button>\r\n            </form>\r\n          </ModalBody>\r\n        </Modal>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Users;\r\n","import React from \"react\";\r\nimport Card from \"../UI/Card\";\r\nimport Users from \"./Users\";\r\nimport styles from \"./Userlist.module.css\";\r\n\r\nconst UsersList = (props) => {\r\n\r\n  const updatedata = (data) => {\r\n    props.editdata({...data});\r\n  }\r\n\r\n  let jsd = (\r\n    <ul>\r\n      {props.tasks.map((user) => (\r\n        <Users updatedata={updatedata} key={user._id} id={user._id} onDLT={props.onDelete} user_task = {user.task} user_deadline={user.deadline}>\r\n          {\" \"}\r\n          {user.task} ({user.deadline})\r\n        </Users>\r\n      ))}\r\n    </ul>\r\n  );\r\n\r\n  if (props.tasks.length === 0) jsd = <div />;\r\n\r\n  return <Card className={styles.users}>{jsd}</Card>;\r\n};\r\n\r\nexport default UsersList;\r\n","import React, { useState, useCallback, useEffect } from \"react\";\nimport AddUser from \"./components/Users/AddUser\";\nimport UsersList from \"./components/Users/UsersList\";\nimport Login from \"./components/login/Login\";\nimport { getUsers } from \"./service/api\";\n\nfunction App() {\n  const [alltask, setAlltask] = useState([]);\n\n  const [localTask, setLocalTask] = useState([]);\n\n  const dataUpdate = (data) => {\n    setAlltask(() => {\n      return [...alltask, data];\n    });\n  };\n\n  // const editdata = (data) => {\n  //   let filtered = alltask.filter(item => item._id !== data._id);\n  //   console.log(\"this is all task before\",filtered);\n  //   setAlltask(()=>{return [...filtered,data]});\n  //   console.log(\"this is final\",alltask);\n  // }\n\n  const getAlltask = useCallback(async () => {\n    let alltaskserver = await getUsers();\n    setAlltask(alltaskserver.data);\n  }, []);\n\n  useEffect(() => {\n    const intervalId = setInterval(() => {\n      getAlltask();\n    }, 2000);\n    return () => clearInterval(intervalId);\n  }, [getAlltask]);\n\n  return (\n    <div>\n      {/* <Login></Login> */}\n      <AddUser updatedata={dataUpdate}></AddUser>\n      <UsersList tasks={alltask}></UsersList>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\n\nimport './index.css';\nimport App from './App';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(<App />);\n"],"sourceRoot":""}